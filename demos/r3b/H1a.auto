
#============================================
# AUTO Demo r3b: Computing unstable manifolds
#============================================

import compute_lps,ext,data,os

if not os.path.exists('s.H1'):
    execfile('r3b.auto')

print "\n***Add the zero adjoint variable***"
ext.make_s('H1',7,-1e-3)

print "\n*** Compute the Floquet eigenfunction***"
run(c='flq',e='flq',s='ext',sv='flq')

print "\n*** Extract data for the selected orbit from s.flq***"
data.create()

print "\n*** Time integration using continuation***"
startH1a = run(e='man',c='man.H1a.0',sv='startH1a')

print "\n*** Compute part of the unstable manifold***"
startUZs = startH1a(['UZ'])
startUZ = startUZs[0]
for s in startUZs:
    # find minimum
    if abs(s.PAR(21)) < abs(startUZ.PAR(21)):
	startUZ = s
H1a = run(startUZ,c='man.H1a.1')
rl(H1a)
sv(H1a,'H1a')

print "\n***Clean the directory***"
cl()


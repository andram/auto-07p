0.7.1:
* Python:
  - Fix solution plotting for plot()/@pp without arguments.
    (reported by Thomas Wagenknecht)
0.7:
* Main AUTO:
  - Allow three parameter continuations for torus bifurcations, fixing
    the angle (Sebius Doedel). See the demo 'tor' for an example.
  - IRS now support strings like IRS='UZ1' in constant files and Python.
  - The new "STOP" constant as an alternative to "SP" allows to clearly
    specify stopping conditions such as STOP=['HB2',UZ2'] which stops at the
    second Hopf or second user defined point, whichever comes first.
    This setting does not switch special points off or on, unlike SP.
  - HomCont now has a new default setting "ISTART=5" which performs a phase
    shift only if the restart solution is not already a homoclinic orbit
    that was continued by HomCont.
  - A problem where extremely flat starts of curves, which sometimes occur
    with heteroclinic and homoclinic orbits, caused the mesh to be wrongly
    calculated was fixed (problem reported by Thomas Wagenknecht).
  - Automatic rotation detection (angular variables) is now switched off
    for heteroclinic orbits in HomCont. This fixes another problem reported
    by Thomas Wagenknecht.
  - Fix crashes with the phase shift algorithm and mesh problems for
    homoclinic branch switching with HomCont, which occurred in a problem
    by Daniele Linaro.
  - Fix crash for BPCONT (algebraic problems) with ISW=2 (reported by
    David Barton).
  - Fix problems with the Intel Fortran compiler ifort (reported by
    Patrick McNeil).
  - Rotations no longer use PAR(19) internally, so this parameter is free to
    use.
  - The following types of continuations now use parameters above NPAR, instead
    of PAR(12), PAR(13), PAR(14), etc. as internal parameters:
    + fold continuations for periodic orbits and general BVPs.
    + branch point continuations for periodic orbits and general BVPs.
    + torus continuations for periodic orbits.
    + period-doubling continuations for periodic orbits.
    Only PAR(11) is reserved for periodic orbits; for general BVPs (IPS=4)
    all parameter indices can be freely used in the equations file.
    For homoclinic branch switching, the internal parameters for the Lin
    vector and the point where the gap is located were moved beyond NPAR
    as well.
  - Solution file headers now have 4 extra fields on the same line:
    NPARI, NDM, IPS, IPRIV which mean: number of internal parameters,
    user dimension, problem type, and a per-problem private field, respectively.
  - Bifurcation diagram files now only print user-specified constants that are
    visually different from the ones used internally, under the heading
    "User-specified constants, where different from above:".
  - Made sure PVLS is always called first, before FUNC, to be able to initialize
    state in user equation files.
  - If pivots are 0 or smaller in absolute value than 1d-308*||A||_max, then
    AUTO will not converge instead of continuing with NaNs
  - Portability problems with some versions of GFortran were fixed, for instance
    avoiding the use of BACKSPACE at EOF for reading constant files.
* PyPLAUT:
  - The plotter PyPLAUT can now plot in three dimensions, if used with a
    suitable version of matplotlib (not 0.98.x). Related new settings for
    autorc and the Python plot() command are:
      minz, maxz, zlabel, zlabel_fontsize, zticks, azimuth, elevation,
      bifurcation_z, solution_z
    @pp, like @p, now accepts some basic 3D commands too (B3D and 3D).
  - A new plot() argument, hide=True, hides the graphics, to be used for
    just printing to a file with matplotlib.
  - The savefig() method of an object returned by plot() saves the file.
  - The new settings:
      coloring_method = "branch"
    or
      coloring_method = "type"
    let the color of the curve depend on the branch number (BR)
    or type number (TY)
  - label="all" (or label = ["all"]) now plots all labels.
  - The plotter now primarily plots by label name, which is useful for appended
    branches of bifurcation diagrams that change the column header name for
    numbered columns.
    Here, for example, "U(1)" denotes just point continuations;
    "MAX U(1)" applies to both "U(1)" and "MAX U(1)" (points and BVPs)
  - @pp now accepts both ',' and ' ' to separate input lists, similar to PLAUT.
* PLAUT04:
  - Print support is added to the File menu if Coin3D is used.
  - With new versions of SoQt, libsimage is no longer necessary. To accomplish
    this, the images of the Sun, the Earth and the stars were converted to JPEG
    format.
  - New settings:
    Object Animation Speed, Sat Animation Speed, Orbit Animation Speed,
    which set default values for the speeds.
  - A new "Draw Coord" menu option, "At Origin" causes the coordinate axes
    to be drawn at the system origin. This corresponds to Coordinate Type = 4
    in (r3b)plaut04.rc.
  - Draw reference planes and spheres, if specified in (r3b)plaut04.rc, via
    the new settings:
    Draw Reference Plane, Draw Reference Sphere, Disk Rotation, Disk Position,
    Disk Radius, Disk Height, Disk Transparency, Disk From File, 
    Sphere Position, Sphere Radius, Sphere Transparency, Sphere From File
* Python:
  - The run command no longer redirects output by default: AUTO writes directly
    to the terminal.
  - When AUTO crashes, stop immediately with an AUTO Runtime Error.
  - Skip entries with a 0 label number in @ls and "print" for bifurcation
    diagrams, and if there are no entries left under a header, don't print the
    header.
  - Default command aliases are now set in AUTOCommands.py instead of .autorc.
  - Before every run(), the Python CLUI explicitly performs memory garbage
    collection, to avoid memory problems.
  - Initially, do not read solution files into memory, but just the headers,
    except for fort.8, because that file is often overwritten.
  - Solution objects now contains keys for corresponding entries in the
    bifurcation diagram file such as "L2-NORM".
  - Add s.b to a solution object, where b is the corresponding point on its
    branch.
  - Branch objects now contain "BR", "TY", and "TY number" keys which you
    can change similar to those of solutions.
  - The dlb, dsp, klb, and ksp functions can now take functions as arguments.
    These functions return a boolean value based on a solution causing it to
    be deleted or kept. A function with two arguments compare the two solutions
    for every combination and if satisfied the second one is deleted or kept.
    This allows for the deletion of "close" solutions.
  - The dlb, dsp, klb, and ksp functions can now be given two file suffix
    arguments, such as dlb("old", "new", f).
  - Improve error reporting: complain about missing files in a clear way,
    not exposing internals.
  - Allow the U keyword for load() to update a solution just like PAR does.
  - Changed writeRaw and toArray to output in table form.
  - Allow mv() and cp() to be used; without () it'll use the shell command.
  - Fixed parsing of headerless bifurcation diagram files.
    The coordinates are then called COLUMN(1), COLUMN(2), etc.
  - Extend @cp/@mv/copy()/move() to accept up to 4 arguments and directories.
  - The Python code no longer tries to be compatible with Python 1.5.2; at
    least Python 2.2 is assumed.
  - The Python code is mostly compatible with Python 3.x.
* Configure checks:
  - Improved Coin3D detection for Mac OS X.
  - Fixed Coin detection to include cppflags from coin-config.
  - Added check for C++ compiler existence (not included by default in
    Ubuntu).
  - Fix C equation files when using AUTO with g95.
* Shell commands:
  - @cp and @mv now accept up to 4 arguments and directories.
  - @rl, @lb, @kuz, @klp, @kbp, and @dlp are more flexible with bifurcation
    diagram files, and can work with older versions of those.
  - @fc and us() always generate the .o file for the equation file,
    in order not to confuse Sun f95.
  - Added lb, db, and rb commands to @lb (autlab), so it can list, relabel
    and delete branches.
* Demos:
  - Converted all demo Fortran files to free-form format.
  - Use IMPLICIT NONE in all demos.
  - Modularized the "brf" and "brc" demos.
    Use dynamic arrays in the "brc" and "brf" demo so NDIM determines the
    number of collocation points.
  - Added a 3-parameter continuation fixing the angle to the "tor" demo.
  - New demo "pcl" that uses Lin's method to connect point-to-cycle connections
    in the Lorenz equations. Thanks to Thorsten Riess and Bernd Krauskopf.
  - New demo "snh": bifurcations of global reinjection orbits near a saddle-node
    Hopf bifurcation: cycle-to-point connections. Also thanks to Thorsten Riess
    and Bernd Krauskopf.
  - New demo "fnc": computation of attracting and repelling slow manifolds
    and the continuation of canard orbits in parameter space in the FitzHugh-
    Nagumo equations. Thanks to Mathieu Desroches and Bernd Krauskopf.
  - Use STOP and NPAR in all demos where applicable.
  - Replaced RL0 and RL1, where used, by conditions in UZR or STOP.
  - Removed A0, A1 except where they are really used.
  - Fixed the 'mtn' HomCont demo: we must explicitly specify NSTAB for
    saddle-node homoclinics.
  - Added autorc files to the demos ab and tor.
* GUI94:
  - The old GUI can now work with .f90 equation files (but not with new-style
    constants files!).

0.6:
* The 2D plotter PyPLAUT can now use matplotlib, be called via the @pp command,
  and operated like the old PLAUT plotter.
  New settings were added to .autorc/autorc for more effective control:
  xlabel, ylabel, xlabel_fontsize, ylabel_fontsize, top_title, top_title_fontsize,
  dashes, solution_coordnames, solution_indepvarname, bifurcation_coordnames,
  stability, default_option, d0, d1, d2, d3, d4.
  PyPLAUT can now also show the stability of branches via dashed curves.
  The coordinate input boxes are more permissive: no need to type quotes or ['t','t','t']:
  just type t. The input boxes now, by default, show the column names from bifurcation
  diagram files.

* A new free-form constants file format is introduced with the following
  new constants: sv, e, s, dat, unames, parnames, SP, U, PAR, NPAR.
  The "dat" constant obsoletes the @fc/us() commands by reading directly from the ASCII
  data file.
  HomCont constants can also be added.
  Strings, set via unames and parnames, can be used in ICP, THU, THL, and UZR.
* Add new setting ISP=4 which detects PDs and TRs but not BPs.
* Implemented SP AUTO constant: SP=["HB1","LP2"] stops at the first HB or
  second LP. SP=["HB","LP"] selects which special points to detect.
* Support new, more compact, dictionary notation for the AUTO constants THL, THU, UZR,
  PAR, and U.
* If IRS is set to -1, then just get the first solution from the solution file.
  Use IRS<-I for the Ith label in the solution file.
* HomCont can automatically detect NSTAB and NUNSTAB, the number of stable and
  unstable eigenvalues in most cases.

* Introduce new @ksp, @dsp, @klb, and @dlb commands:
   @dsp -lp abc         removes all 'LP' labels from b.abc and s.abc
   @dsp -bp             removes all 'BP' labels from fort.7 and fort.8
   @dsp -uz abc abc2    removes all 'UZ' labels from b.abc and s.abc;
   			writes to b.abc2 and s.abc2
   @dsp abc             removes all special labels (anything that is not either every NPR
   			steps or an 'UZ' label) from b.abc and s.abc.
   @ksp does the opposite, e.g.:
   @ksp -lp abc	        keeps all 'LP' labels, and removes all other labels in b.abc and
                        s.abc	
  @dlb and @klb retain type numbers in b. files so they can be plotted.
  The new ksp, dsp, klb, and dlb commands in the Python interface work similarly.
* New merge/@mb commands merge branches in bifurcation diagram files.
* New subtract/@sb commands subtract branches using interpolation
  in bifurcation diagram files.
* The relabel (@rl) command is much faster.
* Removed obsolete @ commands.
* Avoid problems on case-insensitive filesystems by using @@R etc. instead of @R;
  make creates @R from @@R and so on, on case-sensitive filesystems.

* Allow manual branch switching for algebraic problems with ISW=-1. Derivatives are
  now stored in solution files to allow this to work reliably.
* The GETP function that can be called via PVLS supports new arguments:
  * 'EIG' obtains eigenvalues and Floquet multipliers:
     index 1, 3, 5,... obtain the real parts of ev's 1, 2, 3,... and 2, 4, 6,... the
     imaginary parts.
     Eigenvalues are ordered by real part.
     Floquet multipliers are ordered by distance from |z|=1.
  * 'NBC' gets the active NBC
  * 'NINT' gets the active NINT
  * 'NTST' gets NTST
  * 'NCOL' gets NCOL
  * 'NDIM' and 'NDX' get the dimension of the extended system
  * 'MXT' gets t value for maximum of component
  * 'MNT' gets t value for minumum of component
  * 'WINT' gets weight for integral; 0<=I<=NCOL
  * 'DTM' gets value for delta t array 1<=I<=NTST
  Some of these together allow for direct access of the solution array in 
* If the last point of a branch has type UZ, PD, HB, LP, etc. then that type is printed
  instead of EP.
* AUTO computes and prints Floquet multipliers, eigenvalues and stability also
  for the first and last points on a branch.
* NBIFX is eliminated from auto.h. Only NPARX is relevant. It now just designates a
  default maximum; it can be changed at runtime by the NPAR auto constant.
* Bifurcation diagram files (fort.7/b.xxx) now have complete headers showing all
  AUTO constants.
* DFDU, DFDP, DBC, and DICD are zero-initialized so it is not necessary to initialize
  those entries in equation files.
* It is now possible to extend a system via STPNT.
* Allow restarting from a point that is not a Hopf bifurcation in a BVP:
  it will be seen as a constant solution on the interval [0,1].
* Use LAPACK instead of EISPACK throughout.
  Eigenvectors might be different than before but are normalized to have the largest
  component positive.
* Better diagnostics for errors in fort.2/c.xxx and fort.12/h.xxx input files.
* Better performance and accuracy for fold continuations through smarter computation of
  the Jacobian matrix.
* The performance of input/output routines and commands has improved, for instance
  by avoiding re-reads.
* Some parallellization and cache use performance improvements.
* Fix issue not detecting Hopf bifurcations and stability changes:
  a tolerance is only set if the trace of the Jacobian is zero and the dimension is
  even so the system is probably conservative.
* Fix numerous bugs, thanks also to Thomas Wagenknecht, Hinke Osinga, Phil Naylor.

* Many Python syntax changes, all backwards-compatible:
  The run command returns a bifurcation diagram object that represents all output,
  and can work in a bd=run(solution,options) fashion.
  The load command returns a solutions + constants to start from.
  The loadbd command returns a bifurcation diagram object from files.
  It is straightforward to obtain all bifurcation points, branches, or a selection
  from bifurcation diagram objects; these objects can be concatenated like standard
  Python lists.
* "load" now supports changing LAB/PT/TY/BR/PAR in a solution.
* In Python allow starting AUTO via "run" directly from a Python solution array.
* Solutions and bifurcation diagrams in Python now use PyDSTool Pointsets and
  can use numpy/numarray/Numeric for efficiency.
* Elimination of internal use of shell commands by the Python CLUI, so it works
  especially faster in Windows and does not depend on a shell.
* Improved ctrl-c handling running Python scripts.
* You can now plot and read gzipped files directly in PyPLAUT and Python commands.
* Introduce "-c" for the auto command (works like python's -c), and preserve already
  set PYTHONPATH.
* Add an r3b boolean parameter to plot3 in the Python CLUI.
* The Python CLUI can now read .auto files with DOS line endings on Unix systems.
* The lp Python CLUI alias now finds limit points instead of Hopf points,
  and cp is no longer aliased to commandCopyDataFiles (conflicts with cp as
  Unix copy).
* Python2.6 compatibility.

* PLAUT04 uses less memory and parses solution, bifurcation diagram and diagnostics
  files more efficiently.
* You can set PLAUT04's axis colours in plaut04.rc.

* All demos were updated to use Python, also thanks to Fabio Dercole.
  Special HomCont (h.xxx) were eliminated from all demos.
* New demos: um2, um3, ph1 (Eusebius Doedel), c2c and p2c (based on work by
  Doedel, Kooi, van Voorn, and Kuznetsov).

* Improved configure script for use with MacOS X.

* Many updates to the manual, also thanks to Fabio Dercole.

0.5:
* PLAUT04 can now also use the SoQt and Qt libraries. That
  makes it easier to compile on various Linux distributions,
  and makes it portable to native Windows and MacOS X without
  an X server. Using SoQt also avoids some issues with LessTif,
  in particular on 64-bit systems where LessTif is unstable.
* PLAUT04 can now show label numbers in bifurcation diagrams.
  plaut04.rc option: "Show Label Numbers"
* The coloring method options in plaut04.rc can now be set
  seperately for solution displays and bifurcation diagrams:
  "Coloring Method Solution" and "Coloring Method Bifurcation".
* You can also set the "Label Sphere Radius" in plaut04.rc.
* The r3b (now with extensive manifold calculations), pp2, pp3,
  lor and bvp demos were updated.
* Some issues with g95 and Sun's Fortran compiler were solved.
* Likewise for the configure script.
* Repaired MPI regression in 0.4.
* Add support for ipython (auto -i) and also auto-quotes
  and auto-parentheses in the normal auto Python CLUI.
* Added some often used shell commands to the Python CLUI:
  "clear","less","mkdir","rmdir","cp","mv","rm".
* Added ex and dmf aliases for execfile and demofile to the
  Python CLUI.
* Added a GETMDMX(NDIM,P0,P1,NMM) routine to obtain the monodromy
  matrix factorization in PVLS (adapted from Kazuyuki Yagasaki).
* Corrected integral conditions for torus bifurcation continuations
  (bug well-spotted by Huguette Croisier).
* Added BPCont: code for BP continuation of periodic solutions and BVPs
  (Fabio Dercole).
* Added BPCont demos: sspg, lcnf, tfc, and abcb.
* Added @lbf, @ls commands, and the writeShort() and writeScreen() Python
  methods for displaying the bifurcation diagram file in a compact way.

0.4:
* AUTO-07p can now continue branch points in two parameters
  (Fabio Dercole)
* Includes all demos that are documented in the manual.
* The manual documents a new tutorial demo ('cusp').
* The run() and load() commands in the Python CLUI have
  been extended to directly specify AUTO constants, save
  and append files as parameters.
* A new splabs() Python CLUI function directly obtains
  special labels from a solution file (e.g., all Hopf
  bifurcation labels).
* You can now run the @ command (@dm, @R, etc.) directly in
  the Python CLUI without having to escape them with a !.
* The number of parameters printed in the bifurcation
  diagram files is now given by NICP; the parameters beyond
  the 7th are displayed as well.
* A higher precision for numbers is used in the bifurcation
  diagram files. This helps when plotting small sections
  of bifurcation diagrams.
* AUTO now allows free-form Fortran for equation files
  (.f90 extension).
* Parallelisation has improved.

0.3:
* The configure script is fixed for certain GNU Fortran
  configurations on Windows and has improved detection
  for the Coin and SoXt libraries for PLAUT04.
* Some PLAUT04 crashes were fixed.
* The MPI parallellization was improved so that most of
  the big data arrays that form the Jacobian matrix are
  split between machines.
  The distribution of memory enables AUTO to work with
  much larger systems.
* Both OpenMP and MPI parallellizations were improved
  so that the setting up the RHS, copying to a smaller
  system and inflation of parameter routines are done
  in parallel.
* An OpenMP parallellization issue with integral conditions,
  and several other small bugs were fixed.
* A few new demos and helper utilities were added.
* The 'total time' reported by AUTO is now the total wall
  clock time for both OpenMP and MPI.

0.2:
* The configure script is fixed if PLAUT04 dependencies
  are not available and is more robust.
* MPI support is ported from AUTO2000.
* A bug is fixed involving the continuation of folds with
  more than two parameters.
* Automake is no longer used for PLAUT04, using just autoconf
  and Makefile.in files for the whole project instead.
* Various performance improvements have been made.

0.1:
* This is a preliminary version of AUTO-07p.
